// Code generated by "stringer -type=depKind,depKeyKind"; DO NOT EDIT.

package fs

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[depStoreAs-0]
	_ = x[depStoreAsAndDependsOn-1]
	_ = x[depDependsOn-2]
}

const _depKind_name = "depStoreAsdepStoreAsAndDependsOndepDependsOn"

var _depKind_index = [...]uint8{0, 10, 32, 44}

func (i depKind) String() string {
	if i >= depKind(len(_depKind_index)-1) {
		return "depKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _depKind_name[_depKind_index[i]:_depKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[depKeyNone-0]
	_ = x[depKeyAlloc-1]
	_ = x[depKeyWriteFile-2]
	_ = x[depKeyWriteDir-3]
	_ = x[depKeyResizeFile-4]
	_ = x[depKeyWriteDirEntry-5]
}

const _depKeyKind_name = "depKeyNonedepKeyAllocdepKeyWriteFiledepKeyWriteDirdepKeyResizeFiledepKeyWriteDirEntry"

var _depKeyKind_index = [...]uint8{0, 10, 21, 36, 50, 66, 85}

func (i depKeyKind) String() string {
	if i >= depKeyKind(len(_depKeyKind_index)-1) {
		return "depKeyKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _depKeyKind_name[_depKeyKind_index[i]:_depKeyKind_index[i+1]]
}
