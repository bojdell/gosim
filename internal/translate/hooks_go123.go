package translate

var hooksGo123 = map[packageSelector]packageSelector{
	{Pkg: "golang.org/x/sys/unix", Selector: "RawSyscall"}:        {Pkg: hooksGo123Package},
	{Pkg: "golang.org/x/sys/unix", Selector: "RawSyscall6"}:       {Pkg: hooksGo123Package},
	{Pkg: "golang.org/x/sys/unix", Selector: "RawSyscallNoError"}: {Pkg: hooksGo123Package},
	{Pkg: "golang.org/x/sys/unix", Selector: "Syscall"}:           {Pkg: hooksGo123Package},
	{Pkg: "golang.org/x/sys/unix", Selector: "Syscall6"}:          {Pkg: hooksGo123Package},
	{Pkg: "golang.org/x/sys/unix", Selector: "SyscallNoError"}:    {Pkg: hooksGo123Package},

	// amd64 only?
	{Pkg: "golang.org/x/sys/unix", Selector: "gettimeofday"}: {Pkg: hooksGo123Package},

	{Pkg: "hash/maphash", Selector: "runtime_rand"}: {Pkg: hooksGo123Package},

	{Pkg: "internal/abi", Selector: "FuncPCABI0"}:        {Pkg: hooksGo123Package},
	{Pkg: "internal/abi", Selector: "FuncPCABIInternal"}: {Pkg: hooksGo123Package},

	{Pkg: "internal/chacha8rand", Selector: "block"}: {Pkg: hooksGo123Package},

	{Pkg: "internal/bytealg", Selector: "Compare"}:                        {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "Count"}:                          {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "CountString"}:                    {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "Equal"}:                          {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "Index"}:                          {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "IndexByte"}:                      {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "IndexByteString"}:                {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "IndexString"}:                    {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "MakeNoZero"}:                     {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "abigen_runtime_cmpstring"}:       {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "abigen_runtime_memequal"}:        {Pkg: hooksGo123Package},
	{Pkg: "internal/bytealg", Selector: "abigen_runtime_memequal_varlen"}: {Pkg: hooksGo123Package},

	// arm only?
	{Pkg: "internal/cpu", Selector: "getMIDR"}:  {Pkg: hooksGo123Package},
	{Pkg: "internal/cpu", Selector: "getisar0"}: {Pkg: hooksGo123Package},

	// amd only?
	{Pkg: "internal/cpu", Selector: "cpuid"}:           {Pkg: hooksGo123Package},
	{Pkg: "internal/cpu", Selector: "xgetbv"}:          {Pkg: hooksGo123Package},
	{Pkg: "internal/cpu", Selector: "getGOAMD64level"}: {Pkg: hooksGo123Package},

	{Pkg: "internal/godebug", Selector: "registerMetric"}:      {Pkg: hooksGo123Package},
	{Pkg: "internal/godebug", Selector: "setNewIncNonDefault"}: {Pkg: hooksGo123Package},
	{Pkg: "internal/godebug", Selector: "setUpdate"}:           {Pkg: hooksGo123Package},
	{Pkg: "internal/godebug", Selector: "write"}:               {Pkg: hooksGo123Package},

	{Pkg: "internal/poll", Selector: "runtimeNano"}:                    {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_Semacquire"}:             {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_Semrelease"}:             {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_isPollServerDescriptor"}: {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollClose"}:              {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollOpen"}:               {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollReset"}:              {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollServerInit"}:         {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollSetDeadline"}:        {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollUnblock"}:            {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollWait"}:               {Pkg: hooksGo123Package},
	{Pkg: "internal/poll", Selector: "runtime_pollWaitCanceled"}:       {Pkg: hooksGo123Package},

	{Pkg: "internal/runtime/syscall", Selector: "Syscall6"}: {Pkg: hooksGo123Package},

	{Pkg: "internal/syscall/unix", Selector: "GetRandom"}: {Pkg: hooksGo123Package},
	{Pkg: "internal/syscall/unix", Selector: "fcntl"}:     {Pkg: hooksGo123Package},
	{Pkg: "internal/syscall/unix", Selector: "Openat"}:    {Pkg: hooksGo123Package},
	{Pkg: "internal/syscall/unix", Selector: "Unlinkat"}:  {Pkg: hooksGo123Package},

	{Pkg: "iter", Selector: "coroswitch"}: {Pkg: hooksGo123Package},
	{Pkg: "iter", Selector: "newcoro"}:    {Pkg: hooksGo123Package},

	{Pkg: "maps", Selector: "clone"}: {Pkg: hooksGo123Package},

	{Pkg: "math/rand", Selector: "runtime_rand"}: {Pkg: hooksGo123Package},

	{Pkg: "math/rand/v2", Selector: "runtime_rand"}: {Pkg: hooksGo123Package},

	{Pkg: "net", Selector: "runtime_rand"}: {Pkg: hooksGo123Package},

	{Pkg: "os", Selector: "runtime_args"}:       {Pkg: hooksGo123Package},
	{Pkg: "os", Selector: "runtime_beforeExit"}: {Pkg: hooksGo123Package},
	{Pkg: "os", Selector: "runtime_rand"}:       {Pkg: hooksGo123Package},
	{Pkg: "os", Selector: "sigpipe"}:            {Pkg: hooksGo123Package},
	{Pkg: "os", Selector: "checkClonePidfd"}:    {Pkg: hooksGo123Package},
	{Pkg: "os", Selector: "ignoreSIGSYS"}:       {Pkg: hooksGo123Package},
	{Pkg: "os", Selector: "restoreSIGSYS"}:      {Pkg: hooksGo123Package},

	{Pkg: "runtime/debug", Selector: "SetTraceback"}:    {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "WriteHeapDump"}:   {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "freeOSMemory"}:    {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "modinfo"}:         {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "readGCStats"}:     {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "setGCPercent"}:    {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "setMaxStack"}:     {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "setMaxThreads"}:   {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "setMemoryLimit"}:  {Pkg: hooksGo123Package},
	{Pkg: "runtime/debug", Selector: "setPanicOnFault"}: {Pkg: hooksGo123Package},

	{Pkg: "runtime/trace", Selector: "userLog"}:        {Pkg: hooksGo123Package},
	{Pkg: "runtime/trace", Selector: "userRegion"}:     {Pkg: hooksGo123Package},
	{Pkg: "runtime/trace", Selector: "userTaskCreate"}: {Pkg: hooksGo123Package},
	{Pkg: "runtime/trace", Selector: "userTaskEnd"}:    {Pkg: hooksGo123Package},

	{Pkg: "sync", Selector: "fatal"}:                       {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_LoadAcquintptr"}:      {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_Semacquire"}:          {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_SemacquireMutex"}:     {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_SemacquireRWMutex"}:   {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_SemacquireRWMutexR"}:  {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_Semrelease"}:          {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_StoreReluintptr"}:     {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_canSpin"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_doSpin"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_nanotime"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_notifyListAdd"}:       {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_notifyListCheck"}:     {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_notifyListNotifyAll"}: {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_notifyListNotifyOne"}: {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_notifyListWait"}:      {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_procPin"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_procUnpin"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_randn"}:               {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "runtime_registerPoolCleanup"}: {Pkg: hooksGo123Package},
	{Pkg: "sync", Selector: "throw"}:                       {Pkg: hooksGo123Package},

	{Pkg: "sync/atomic", Selector: "AddInt32"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AddInt64"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AddPointer"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AddUint32"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AddUint64"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AddUintptr"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AndInt32"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AndInt64"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AndUint32"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AndUint64"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "AndUintptr"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "CompareAndSwapInt32"}:   {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "CompareAndSwapInt64"}:   {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "CompareAndSwapPointer"}: {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "CompareAndSwapUint32"}:  {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "CompareAndSwapUint64"}:  {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "CompareAndSwapUintptr"}: {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "LoadInt32"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "LoadInt64"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "LoadPointer"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "LoadUint32"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "LoadUint64"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "LoadUintptr"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "OrInt32"}:               {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "OrInt64"}:               {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "OrUint32"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "OrUint64"}:              {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "OrUintptr"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "StoreInt32"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "StoreInt64"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "StorePointer"}:          {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "StoreUint32"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "StoreUint64"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "StoreUintptr"}:          {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "SwapInt32"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "SwapInt64"}:             {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "SwapPointer"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "SwapUint32"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "SwapUint64"}:            {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "SwapUintptr"}:           {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "runtime_procPin"}:       {Pkg: hooksGo123Package},
	{Pkg: "sync/atomic", Selector: "runtime_procUnpin"}:     {Pkg: hooksGo123Package},

	{Pkg: "syscall", Selector: "Exit"}:                        {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "Getpagesize"}:                 {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "RawSyscall6"}:                 {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "cgocaller"}:                   {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "hasWaitingReaders"}:           {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "rawSyscallNoError"}:           {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "rawVforkSyscall"}:             {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtimeSetenv"}:               {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtimeUnsetenv"}:             {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_AfterExec"}:           {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_AfterFork"}:           {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_AfterForkInChild"}:    {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_BeforeExec"}:          {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_BeforeFork"}:          {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_doAllThreadsSyscall"}: {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_entersyscall"}:        {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_envs"}:                {Pkg: hooksGo123Package},
	{Pkg: "syscall", Selector: "runtime_exitsyscall"}:         {Pkg: hooksGo123Package},

	{Pkg: "syscall", Selector: "FcntlFlock"}: {Pkg: hooksGo123Package},

	// amd64 only?
	{Pkg: "syscall", Selector: "gettimeofday"}: {Pkg: hooksGo123Package},

	{Pkg: "time", Selector: "Sleep"}:       {Pkg: hooksGo123Package},
	{Pkg: "time", Selector: "now"}:         {Pkg: hooksGo123Package},
	{Pkg: "time", Selector: "newTimer"}:    {Pkg: hooksGo123Package},
	{Pkg: "time", Selector: "resetTimer"}:  {Pkg: hooksGo123Package},
	{Pkg: "time", Selector: "runtimeNano"}: {Pkg: hooksGo123Package},
	{Pkg: "time", Selector: "stopTimer"}:   {Pkg: hooksGo123Package},
}

var hooksGensyscallGo123ByArch = map[string]map[packageSelector]packageSelector{}

var acceptedgo123Linknames = map[packageSelector]packageSelector{
	{Pkg: "hash/maphash", Selector: "runtime_memhash"}: {Pkg: "runtime", Selector: "memhash"},
}
